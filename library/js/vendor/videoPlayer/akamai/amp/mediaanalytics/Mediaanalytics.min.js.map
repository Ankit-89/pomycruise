{"version":3,"sources":["../../../../src/MediaAnalytics.js","../../../../src/main.js"],"names":["this","MediaAnalytics","__proto__","Object","getPrototypeOf","call","player","config","AKAMAI_MEDIA_ANALYTICS_CONFIG_FILE_PATH","_this2","dimensions","key","val","value","setAkamaiMediaAnalyticsData","window","AkamaiAnalytics_debug","mediaElement","akamaiSetVideoObject","error","ads","onadbreakstart","bind","addEventListener","onadloaded","onadstarted","onadbreakend","onadended","onadfirstquartile","media","mediaanalytics","akamia","Utils","event","bitrate","adObject","data","adVO","partner","akamaiHandleAdLoaded","akamai","amp","Plugin","registerPlugin"],"mappings":"8IAU8BA,MAAAC,EAAAC,WAAAC,OAAAC,eAAAH,IAAAI,KAAAL,KAAAM,EAAAC,mDAVTN,YAAAA,EAAAA,2KAGVO,cAAAA,IAAAA,EAAAA,WAA0CD,OAAOA,eAAxDN,GAAA,SAAAQ,GAAAJ,KAAAI,EAAAH,EAAAC,4HAYIG,GAAAA,EAAaC,EACjB,OAAKC,MACOC,GAAVD,4JAaEE,4BAAAH,EAAAD,EAAAC,sQAeAI,OAAAC,sBAAA,+BAEOA,KAAwBV,OAA/BW,mCAEKC,OAAAA,MAAAA,8BAAP,0BAAAC,qCAOEC,iBACF,aAAApB,KAAAqB,eAAAC,KAAAtB,qEAEEuB,iBAAiB,SAAAvB,KAAcwB,WAAKH,KAAAA,SACpCE,iBAAiB,UAArBvB,KAAiCyB,YAAKC,KAAaJ,SAC/CC,iBAAiB,QAArBvB,KAA+B2B,UAAKH,KAAWF,SAE3CC,iBAAiB,gBAAcI,KAAAA,kBAAnCL,KAAAtB,qEAEIuB,iBAAiB,gBAAiBvB,KAAK4B,kBAAkBN,KAAKtB,sEAOlE,mBAAIU,iMAMgBH,wDAKPsB,OAAMC,IAAAA,MAAAA,SAAnB9B,KAAAO,OAAAG,WAAAH,EAAAG,YAEeqB,KAAAA,OAAWC,sNAYhBH,sPAYKI,6HAMDA,OAAOC,kOAejBC,cACSF,EAAMG,qBACFC,EAAAC,kBACDD,gBADd,mBAAAE,mvBApIsCC,IAAOC,IAAIC,eAAAA,iBAAAA,EAAAA,SCEvDF,EAAOC,eAAQE","file":"akamai/amp/mediaanalytics/Mediaanalytics.min.js","sourcesContent":["export default class MediaAnalytics extends akamai.amp.Plugin {\n\n  static create(player, config) {\n    window.AKAMAI_MEDIA_ANALYTICS_CONFIG_FILE_PATH = config.config\n    return akamai.amp.AMP.addResources(config.sdk)\n      .then(() => {\n        return super.create(player, config)\n      })\n  }\n\n  constructor(player, config) {\n    super(player, config)\n  }\n\n  setDimensions(value) {\n    let dimensions = this.config.dimensions\n    for (let key in value) {\n      let val = value[key]\n      if (val != null) {\n        dimensions[key] = val // TODO: Does this need to be evaluated for bindings?\n      }\n    }\n    this.applyDimensions(dimensions)\n    return value\n  }\n\n  applyDimensions(dimensions) {\n    if (typeof window.setAkamaiMediaAnalyticsData != \"function\")\n      return\n\n    try {\n      for (let key in dimensions) {\n        setAkamaiMediaAnalyticsData(key, dimensions[key])\n      }\n    }\n    catch (error) {\n      this.player.logger.error(\"[AMP MEDIA ANALYTICS ERROR]\", \"Could not set dimensions:\", error)\n    }\n\n    if (this.config.iplookup === false && typeof akamaiDisableServerIpLookup === \"function\") {\n       akamaiDisableServerIpLookup()\n    }\n  }\n\n  onready(event) {\n    try {\n      if (this.debug === true) {\n        window.AkamaiAnalytics_debug = 1\n      }\n      window.akamaiSetVideoObject(this.player.mediaElement)\n    }\n    catch (error) {\n      this.player.logger.error(\"[AMP MEDIA ANALYTICS ERROR]\", \"Could not set video tag\", error)\n    }\n\n    let ads = this.player.ads\n    if (ads == null)\n      return\n\n    ads.addEventListener(\"breakstart\", this.onadbreakstart.bind(this))\n    ads.addEventListener(\"breakend\", this.onadbreakend.bind(this))\n    ads.addEventListener(\"loaded\", this.onadloaded.bind(this))\n    ads.addEventListener(\"started\", this.onadstarted.bind(this))\n    ads.addEventListener(\"ended\", this.onadended.bind(this))\n\n    ads.addEventListener(\"firstquartile\", this.onadfirstquartile.bind(this))\n    ads.addEventListener(\"midpoint\", this.onadmidpoint.bind(this))\n    ads.addEventListener(\"thirdquartile\", this.onadthirdquartile.bind(this))\n  }\n\n  onmediachange(event) {\n    let media = event.detail\n    let dimensions = null\n\n    if (typeof akamaiSetStreamURL === \"function\") {\n      akamaiSetStreamURL(media.src, false)\n    }\n\n    let viewerId = this.config.viewerId || this.config.viewerID || this.config[\"std:viewerId\"]\n    if (viewerId != null && typeof akamaiSetViewerId == \"function\") {\n      akamaiSetViewerId(viewerId)\n    }\n\n    let config = media.mediaanalytics\n    if (config != null && config.dimensions != null) {\n      dimensions = akamia.amp.Utils.override(this.config.dimensions, config.dimensions)\n    } else {\n      dimensions = this.config.dimensions\n    }\n\n    if (typeof akamaiHandleStreamSwitch === \"function\") {\n      akamaiHandleStreamSwitch()\n    }\n\n    this.applyDimensions(dimensions)\n  }\n\n  updateMedia(media) {\n    if (typeof akamaiHandleTitleSwitch === \"function\") {\n      akamaiHandleTitleSwitch(media)\n    }\n  }\n\n  onfragmentloadstart(event) {\n    if (typeof fragmentDownloadStarted === \"function\") {\n      fragmentDownloadStarted(event.detail)\n    }\n  }\n\n  onfragmentloaded(event) {\n    if (typeof fragmentDownloadCompleted === \"function\") {\n      fragmentDownloadCompleted(event.detail)\n    }\n  }\n\n  onbitratechange(event) {\n    if (typeof akamaiHandleBitRateSwitch === \"function\") {\n      akamaiHandleBitRateSwitch(event.detail.bitrate)\n    }\n  }\n\n  onadbreakstart() {\n    this.player.mediaElement.dataset.isad = true\n  }\n\n  onadbreakend() {\n    this.player.mediaElement.dataset.isad = false\n  }\n\n  onadloaded(event) {\n    try {\n      let adVO = event.data\n      let adObject = {\n        adDuration: adVO.duration,\n        adPartnerId: adVO.partner,\n        adTitle: adVO.title,\n        adId: adVO.id\n      }\n\n      if (typeof akamaiHandleAdLoaded === \"function\") {\n        akamaiHandleAdLoaded(adObject)\n      }\n    }\n    catch (error) {\n      this.player.logger.error(\"[AMP MEDIA ANALYTICS ERROR]\", error)\n    }\n  }\n\n  onadstarted() {\n    if (typeof akamaiHandleAdStarted === \"function\") {\n      akamaiHandleAdStarted()\n    }\n  }\n\n  onadfirstquartile() {\n    if (typeof akamaiHandleAdFirstQuartile === \"function\") {\n      akamaiHandleAdFirstQuartile()\n    }\n  }\n\n  onadmidpoint() {\n    if (typeof akamaiHandleAdMidpoint === \"function\") {\n      akamaiHandleAdMidpoint()\n    }\n  }\n\n  onadthirdquartile() {\n    if (typeof akamaiHandleAdThirdQuartile === \"function\") {\n      akamaiHandleAdThirdQuartile()\n    }\n  }\n\n  onadended() {\n    if (typeof akamaiHandleAdCompleted === \"function\") {\n      akamaiHandleAdCompleted()\n    }\n    // TODO: Why is this here?\n    this.player.getMediaElement().dataset.isad = true\n  }\n}\n","import MediaAnalytics from \"./MediaAnalytics.js\"\n\nakamai.amp.AMP.registerPlugin(\"mediaanalytics\", MediaAnalytics.factory)\n\nexport {MediaAnalytics}\n"]}